import os
import time
from shutil import rmtree, move
from ultralytics import YOLO
from pathlib import Path

# Deletes the runs/detect/ dir so there additional predict folders aren't generated by YOLOv8, creates a new
# empty one to start with
rmtree('runs/detect/')

# Set our model to VisDrone weights and create an empty set of processed images
model = YOLO('weights/best.pt')
processed_images = set()

while True:
    # Wait for a few seconds before processing any images to avoid scripts conflicting
    time.sleep(5)
    
    # Get all images in the received-images directory
    images = sorted(os.listdir('/home/david/test/received-images/'))
    
    # Filter images that have not been processed yet
    images = [img for img in images if img not in processed_images]
    
    # Process each image
    for img in images:
        # Run YOLOv8 Object Detection model with VisDrone weights. Saves the text file with detetions,
        # an additional image with annotations, and makes sure the image is set to the imgsz
        # used when training the model on VisDrone.
        results = model.predict(f'received-images/{img}', save_txt=True, save=True, imgsz=640)
        
        # Check if any objects were detected
        txt_file = f'runs/detect/predict/labels/{os.path.splitext(img)[0]}.txt'
        if os.path.exists(txt_file):
            print(f'Object/s detected in {img}')
            # Move image and txt files to object-detected directory
            move(f'runs/detect/predict/{img}', f'object-detected/detection-{img}')
            move(f'received-images/{img}', f'object-detected/{img}')
            move(txt_file, f'object-detected/{os.path.splitext(img)[0]}.txt')
            print('Images and txt file moved')
        else:
            # Move image with no detections to no-detections dir
            move(f'received-images/{img}', f'no-detections/{img}')
            print(f'No objects detected in {img}')

        # Mark image as processed
        processed_images.add(img)
    
    
